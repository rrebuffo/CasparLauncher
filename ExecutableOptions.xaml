<Window x:Class="CasparLauncher.ExecutableOptions"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CasparLauncher"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:l="clr-namespace:CasparLauncher.Properties"
        mc:Ignorable="d"
        Style="{StaticResource StandardWindow}"
        MinWidth="500"
        Width="700"
        MinHeight="200"
        Height="300"
        WindowStyle="SingleBorderWindow"
        ResizeMode="NoResize"
        SizeToContent="Height"
        WindowStartupLocation="CenterOwner" Background="{StaticResource Background}"
        Foreground="{StaticResource Foreground}"
        Name="OptionsWindow"
        Title="{x:Static l:Resources.ExecutableConfigWindowTitle}">
    <Window.Resources>
        <local:BooleanToVisibilityConverter x:Key="boolToVisibility" False="Collapsed" True="Visible" />
        <local:InvertBooleanConverter x:Key="invertBool" />
        <local:IcoToImageSourceConverter x:Key="icoToSource" />
        <local:EnumConverter x:Key="enumConverter" />
        <local:NameAndIndexConverter x:Key="nameIndexConverter" />
        <local:ListBoxSelectedConverter x:Key="lbSelected" />

        <Style x:Key="DataGridTextColumnStyle" TargetType="TextBox">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource Foreground}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="CaretBrush" Value="{StaticResource Foreground}" />
        </Style>

        <Style x:Key="PropertyNameTextBlock" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="TextAlignment" Value="Right" />
        </Style>
        
        <Style x:Key="FieldDescriptionTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource PropertyNameTextBlock}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="TextAlignment" Value="Left" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="LineHeight" Value="8" />
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
            <Setter Property="Foreground" Value="{StaticResource LightBackground}" />
        </Style>
        
        <Style x:Key="SettingsField" TargetType="TextBox" BasedOn="{StaticResource StandardTextBox}">
            <Setter Property="Width" Value="50" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        
        <Style TargetType="TextBlock" BasedOn="{StaticResource PropertyNameTextBlock}" />
        
        <GridLength x:Key="DescColWidth">160</GridLength>
        
        <GridLength x:Key="IntValueWidth">70</GridLength>

        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource StandardComboBox}">
            <Setter Property="Margin" Value="1" />
            <Setter Property="MinWidth" Value="150" />
        </Style>
        
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <ScrollViewer.Resources>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource StandardComboBox}">
                        <Style.Resources>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource StandardTextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                <Setter Property="TextAlignment" Value="Left" />
                            </Style>
                        </Style.Resources>
                    </Style>
                </ScrollViewer.Resources>
            <StackPanel>
                <GroupBox Header="{x:Static l:Resources.ExecutableConfigWindowGbOptionsHeader}">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{StaticResource DescColWidth}" />
                                <ColumnDefinition MinWidth="50" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{x:Static l:Resources.ExecutableConfigWindowName}" Grid.Column="0" Margin="0 5 7 5" />
                            <TextBox Grid.Column="1" Text="{Binding Path=Name, Mode=TwoWay}" VerticalContentAlignment="Center" />
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{StaticResource DescColWidth}" />
                                <ColumnDefinition MinWidth="50" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{x:Static l:Resources.ExecutableConfigWindowPath}" Grid.Column="0" Margin="0 5 7 5" />
                            <TextBox Grid.Column="1" Text="{Binding Path=Path, Mode=TwoWay}" VerticalContentAlignment="Center" />
                            <Button Name="ChangeLocation" Padding="5 0" Grid.Column="2" Content="{x:Static l:Resources.BrowseForFileButton}" Click="ChangeLocation_Click" />
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{StaticResource DescColWidth}" />
                                <ColumnDefinition MinWidth="50" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{x:Static l:Resources.ExecutableConfigWindowArgs}" Grid.Column="0" Margin="0 5 7 5" />
                            <TextBox Grid.Column="1" Text="{Binding Path=Args, Mode=TwoWay}" VerticalContentAlignment="Center" />
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{StaticResource DescColWidth}" />
                                <ColumnDefinition MinWidth="50" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{x:Static l:Resources.ExecutableConfigWindowAuto}" Grid.Column="0" Margin="0 5 7 5" />
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <CheckBox IsChecked="{Binding Path=AutoStart, Mode=TwoWay}" VerticalContentAlignment="Center" Margin="2" />
                                <TextBlock Grid.Column="2" Text="{x:Static l:Resources.ExecutableConfigWindowAutoDesc}" Style="{StaticResource FieldDescriptionTextBlock}" />
                            </Grid>
                        </Grid>
                        <Grid Visibility="{Binding Path=AutoStart, Converter={StaticResource boolToVisibility}, FallbackValue=Visible}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{StaticResource DescColWidth}" />
                                <ColumnDefinition MinWidth="50" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{x:Static l:Resources.ExecutableConfigWindowDelay}" Grid.Column="0" Margin="0 5 7 5" />
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{StaticResource IntValueWidth}" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding Path=StartupDelay, Mode=TwoWay}" VerticalContentAlignment="Center" />
                                <TextBlock Grid.Column="2" Text="{x:Static l:Resources.ExecutableConfigWindowDelayDesc}" Style="{StaticResource FieldDescriptionTextBlock}" />
                            </Grid>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{StaticResource DescColWidth}" />
                                <ColumnDefinition MinWidth="50" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{x:Static l:Resources.ExecutableConfigWindowCommandsEnabled}" Grid.Column="0" Margin="0 5 7 5" />
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <CheckBox IsChecked="{Binding Path=AllowCommands, Mode=TwoWay}" VerticalContentAlignment="Center" Margin="2" />
                                <TextBlock Grid.Column="2" Text="{x:Static l:Resources.ExecutableConfigWindowCommandsEnabledDesc}" Style="{StaticResource FieldDescriptionTextBlock}" />
                            </Grid>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{StaticResource DescColWidth}" />
                                <ColumnDefinition MinWidth="50" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{x:Static l:Resources.ExecutableConfigWindowMultipleInstancesEnabled}" Grid.Column="0" Margin="0 5 7 5" />
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <CheckBox IsChecked="{Binding Path=AllowMultipleInstances, Mode=TwoWay}" VerticalContentAlignment="Center" Margin="2" />
                                <TextBlock Grid.Column="2" Text="{x:Static l:Resources.ExecutableConfigWindowMultipleInstancesEnabledDesc}" Style="{StaticResource FieldDescriptionTextBlock}" />
                            </Grid>
                        </Grid>
                        <Grid Visibility="{Binding Path=AllowCommands, Converter={StaticResource boolToVisibility}, FallbackValue=Collapsed}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{StaticResource DescColWidth}" />
                                <ColumnDefinition MinWidth="50" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{x:Static l:Resources.ExecutableConfigWindowCommandsDelay}" Grid.Column="0" Margin="0 5 7 5" />
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{StaticResource IntValueWidth}" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding Path=CommandsDelay, Mode=TwoWay}" VerticalContentAlignment="Center" />
                                <TextBlock Grid.Column="2" Text="{x:Static l:Resources.ExecutableConfigWindowCommandsDelayDesc}" Style="{StaticResource FieldDescriptionTextBlock}" />
                            </Grid>
                        </Grid>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="{x:Static l:Resources.ExecutableConfigWindowCommands}" Visibility="{Binding Path=AllowCommands, Converter={StaticResource boolToVisibility}, FallbackValue=Collapsed}">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button Name="ExportCommands"  Content="{x:Static l:Resources.ExecutableConfigWindowCommandsExport}"  Click="ExportCommands_Click"/>
                            <Button Name="ImportCommands"  Content="{x:Static l:Resources.ExecutableConfigWindowCommandsImport}"  Click="ImportCommands_Click"/>
                        </StackPanel>
                        <DataGrid Grid.Column="1" ItemsSource="{Binding Path=Commands, Mode=TwoWay}" VerticalContentAlignment="Center" AutoGenerateColumns="False" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="True" CanUserAddRows="True" CanUserDeleteRows="True" Height="150">
                            <DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{x:Static ApplicationCommands.Copy}" />
                                    <MenuItem Command="{x:Static ApplicationCommands.Paste}" />
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                            <DataGrid.CommandBindings>
                                <CommandBinding Command="{x:Static ApplicationCommands.Paste}" CanExecute="CanPaste" Executed="Paste"/>
                                <CommandBinding Command="{x:Static ApplicationCommands.Copy}" CanExecute="CanCopy" Executed="Copy"/>
                            </DataGrid.CommandBindings>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="*" Header="{x:Static l:Resources.ExecutableConfigWindowCommandsDgHeader}" Binding="{Binding Path=Value, Mode=TwoWay}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Window>
