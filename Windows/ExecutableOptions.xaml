<ui:DialogWindow x:Class="CasparLauncher.ExecutableOptions"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CasparLauncher"
        xmlns:ui="clr-namespace:BaseUISupport.Controls;assembly=BaseUISupport"
        xmlns:converters="clr-namespace:BaseUISupport.Converters;assembly=BaseUISupport"
        xmlns:helpers="clr-namespace:BaseUISupport.Helpers;assembly=BaseUISupport"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:l="clr-namespace:CasparLauncher.Properties"
        mc:Ignorable="d"
        MinWidth="500"
        Width="700"
        MinHeight="200"
        Height="300"
        WindowStyle="SingleBorderWindow"
        ResizeMode="NoResize"
        SizeToContent="Height"
        WindowStartupLocation="CenterOwner"
        Foreground="{DynamicResource Foreground}"
        x:Name="OptionsWindow"
        Title="{helpers:Localization ExecutableConfigWindowTitle}">
    <Window.Resources>
        <converters:BooleanToVisibilityConverter x:Key="boolToVisibility" False="Collapsed" True="Visible" />
        <converters:InvertBooleanConverter x:Key="invertBool" />
        <converters:IcoToImageSourceConverter x:Key="icoToSource" />
        <converters:EnumConverter x:Key="enumConverter" />
        <converters:NameAndIndexConverter x:Key="nameIndexConverter" />
        <converters:ListBoxSelectedConverter x:Key="lbSelected" />
        
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource PropertyNameTextBlock}" />

        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBox}">
            <Setter Property="Margin" Value="1" />
            <Setter Property="MinWidth" Value="150" />
        </Style>

        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBox}">
            <Setter Property="Margin" Value="2"/>
        </Style>

    </Window.Resources>
    <Grid Margin="0 0 0 0">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <ScrollViewer.Resources>
                <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBox}">
                    <Style.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="TextAlignment" Value="Left" />
                        </Style>
                    </Style.Resources>
                </Style>
            </ScrollViewer.Resources>
            <StackPanel Grid.IsSharedSizeScope="True">
                <GroupBox Header="{helpers:Localization ExecutableConfigWindowGbOptionsHeader}">
                    <StackPanel>
                        <ui:ConfigItem Label="{helpers:Localization ExecutableConfigWindowName}" Type="Text" Binding="{Binding Path=Name, Mode=TwoWay}"/>
                        <ui:ConfigItem Label="{helpers:Localization ExecutableConfigWindowPath}" Type="Text" Binding="{Binding Path=Path, Mode=TwoWay}">
                            <ui:ConfigItem.Actions>
                                <Button Name="ChangeLocation" Padding="5 0" Grid.Column="2" Content="{helpers:Localization BrowseForFileButton}" Click="ChangeLocation_Click" />
                            </ui:ConfigItem.Actions>
                        </ui:ConfigItem>
                        <ui:ConfigItem Label="{helpers:Localization ExecutableConfigWindowArgs}" Type="Text" Binding="{Binding Path=Args, Mode=TwoWay}"/>
                        <ui:ConfigItem Label="{helpers:Localization ExecutableConfigWindowConfigFile}" Type="Custom">
                            <ui:ConfigItem.Style>
                                <Style TargetType="ui:ConfigItem" BasedOn="{StaticResource ConfigItem}">
                                    <Setter Property="Collapsed" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsServer}" Value="True">
                                            <Setter Property="Collapsed" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsScanner}" Value="True">
                                            <Setter Property="Collapsed" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ui:ConfigItem.Style>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ComboBox Margin="2 2" Grid.Column="0" VerticalContentAlignment="Center" IsEditable="True" Text="{Binding ElementName=OptionsWindow, Path=CustomPath, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" ItemsSource="{Binding ElementName=OptionsWindow, Path=ConfigFiles}" SelectedValue="{Binding Path=ConfigFile, Mode=TwoWay}" HorizontalAlignment="Stretch">
                                </ComboBox>
                                <StackPanel Grid.Column="1" Orientation="Horizontal">
                                    <Button Width="26" Height="26" Margin="2 1" Padding="0" Click="EditConfigButton_Click">
                                        <Path Width="16" Height="16" Style="{DynamicResource ConfigIcon}" Stretch="Uniform"/>
                                    </Button>
                                    <Button Width="26" Height="26" Margin="2 1" Padding="0" Click="CloneConfigButton_Click">
                                        <Path Width="16" Height="16" Style="{DynamicResource DuplicateIcon}" Stretch="Uniform"/>
                                    </Button>
                                    <Button Width="26" Height="26" Margin="2 1" Padding="0" Click="RemoveConfigButton_Click">
                                        <Path Width="16" Height="16" Style="{DynamicResource TrashIcon}" Stretch="Uniform"/>
                                    </Button>
                                    <Rectangle Fill="{DynamicResource HighlightAccent}" Width="1" Height="16" VerticalAlignment="Center" Margin="8 0"/>
                                </StackPanel>
                                <Button Grid.Column="2" Height="26" Padding="2 0" Click="NewConfigButton_Click">
                                    <StackPanel Margin="4 0" Orientation="Horizontal">
                                        <Path Width="14" Height="14" Style="{DynamicResource NewIcon}" Stretch="Uniform"/>
                                        <TextBlock Margin="4 0 0 0" Text="{helpers:Localization OpenConfigEditorNewButtonText}" FontSize="12"/>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </ui:ConfigItem>
                        <ui:ConfigItem Type="CheckBox" Label="{helpers:Localization ExecutableConfigWindowAuto}" Binding="{Binding Path=AutoStart, Mode=TwoWay}" Description="{helpers:Localization ExecutableConfigWindowAutoDesc}"/>
                        <ui:ConfigItem Type="Integer" Label="{helpers:Localization ExecutableConfigWindowDelay}" Binding="{Binding Path=StartupDelay, Mode=TwoWay}" Description="{helpers:Localization ExecutableConfigWindowDelayDesc}" Collapsed="{Binding Path=AutoStart, Converter={StaticResource invertBool}, FallbackValue=True}"/>
                        <ui:ConfigItem Type="Integer" Label="{helpers:Localization ConfigBufferLines}" Binding="{Binding Path=BufferLines, Mode=TwoWay}"/>
                        <ui:ConfigItem Type="CheckBox" Label="{helpers:Localization ConfigSupressEmptyLines}" Binding="{Binding Path=SuppressEmptyLines, Mode=TwoWay}"/>
                        <ui:ConfigItem Type="CheckBox" Label="{helpers:Localization ExecutableConfigWindowCommandsEnabled}" Binding="{Binding Path=AllowCommands, Mode=TwoWay}" Description="{helpers:Localization ExecutableConfigWindowCommandsEnabledDesc}"/>
                        <ui:ConfigItem Type="CheckBox" Label="{helpers:Localization ExecutableConfigWindowMultipleInstancesEnabled}" Binding="{Binding Path=AllowMultipleInstances, Mode=TwoWay}" Description="{helpers:Localization ExecutableConfigWindowMultipleInstancesEnabledDesc}"/>
                        <ui:ConfigItem Type="CheckBox" Label="{helpers:Localization ExecutableConfigWindowKillOnlyCurrentPathEnabled}" Binding="{Binding Path=KillOnlyCurrentPath, Mode=TwoWay}" Description="{helpers:Localization ExecutableConfigWindowKillOnlyCurrentPathEnabledDesc}" Collapsed="{Binding Path=AllowMultipleInstances, FallbackValue=True}"/>
                        <ui:ConfigItem Type="Integer" Label="{helpers:Localization ExecutableConfigWindowCommandsDelay}" Binding="{Binding Path=CommandsDelay, Mode=TwoWay}" Description="{helpers:Localization ExecutableConfigWindowCommandsDelayDesc}" Collapsed="{Binding Path=AllowCommands, Converter={StaticResource invertBool}, FallbackValue=True}"/>
                    </StackPanel>
                </GroupBox>
                <ui:TabbedPanel Margin="5" BorderBrush="{DynamicResource ControlBgIdle}" Visibility="{Binding Path=AllowCommands, Converter={StaticResource boolToVisibility}, FallbackValue=Collapsed}">
                    <ui:TabbedPanel.CommandIcons>
                        <x:Array Type="{x:Type Button}">
                            <Button Name="ImportCommands" Click="ImportCommands_Click">
                                <TextBlock Text="{helpers:Localization ExecutableConfigWindowCommandsImport}" Margin="0"/>
                            </Button>
                            <Button Name="ExportCommands" Click="ExportCommands_Click">
                                <TextBlock Text="{helpers:Localization ExecutableConfigWindowCommandsExport}" Margin="0"/>
                            </Button>
                        </x:Array>
                    </ui:TabbedPanel.CommandIcons>
                    <ui:TabbedPanelItem Header="{helpers:Localization ExecutableConfigWindowCommands}" Background="{DynamicResource ControlBgIdle}" Style="{DynamicResource TabbedToolBoxItem}">
                        <DataGrid Grid.Column="1" ItemsSource="{Binding Path=Commands, Mode=TwoWay}" VerticalContentAlignment="Center" AutoGenerateColumns="False" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="True" CanUserAddRows="True" CanUserDeleteRows="True" Height="150">
                            <DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{x:Static ApplicationCommands.Copy}" />
                                    <MenuItem Command="{x:Static ApplicationCommands.Paste}" />
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                            <DataGrid.CommandBindings>
                                <CommandBinding Command="{x:Static ApplicationCommands.Paste}" CanExecute="CanPaste" Executed="Paste"/>
                                <CommandBinding Command="{x:Static ApplicationCommands.Copy}" CanExecute="CanCopy" Executed="Copy"/>
                            </DataGrid.CommandBindings>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="*" Header="{helpers:Localization ExecutableConfigWindowCommandsDgHeader}" Binding="{Binding Path=Value, Mode=TwoWay}" EditingElementStyle="{StaticResource DataGridTextBox}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </ui:TabbedPanelItem>
                </ui:TabbedPanel>
            </StackPanel>
        </ScrollViewer>
        <Button Grid.Row="2" Background="{DynamicResource BaseBgRed}" Margin="6 0 6 6" Click="RemoveExecutable_Click">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="2">
                <Path Style="{DynamicResource TrashIcon}" Width="16" Height="16" Margin="2"/>
                <TextBlock Text="{helpers:Localization ExecutableConfigWindowDeleteButton}" Margin="2"/>
            </StackPanel>
        </Button>
    </Grid>
</ui:DialogWindow>
