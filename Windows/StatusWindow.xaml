<Window x:Class="CasparLauncher.Launcher" Name="LauncherWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CasparLauncher"
        xmlns:l="clr-namespace:CasparLauncher.Properties"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Style="{StaticResource StandardWindow}"
        Top="{Binding PosY, Mode=TwoWay}"
        Left="{Binding PosX, Mode=TwoWay}"
        Height="{Binding Height, Mode=TwoWay}"
        Width="{Binding Width, Mode=TwoWay}"
        MinWidth="800" MinHeight="400" Background="{StaticResource LightBackground}"
        WindowStyle="SingleBorderWindow" ResizeMode="CanResize"
        Loaded="LauncherLoaded"
        DpiChanged="LauncherWindow_DpiChanged" ContextMenuService.IsEnabled="False"
        WindowStartupLocation="Manual" Title="{x:Static l:Resources.AppTitle}">
    <Window.Resources>
        <local:BooleanToVisibilityConverter x:Key="boolToVisibility" False="Collapsed" True="Visible" />
        <local:BooleanToVisibilityConverter x:Key="invBoolToVisibility" False="Visible" True="Collapsed" />
        <local:ItemsLayoutConverter x:Key="itemsToCols" Rows="False"/>
        <local:ItemsLayoutConverter x:Key="itemsToRows" Rows="True"/>
        <local:InvertBooleanConverter x:Key="invertBool" />
        <local:IcoToImageSourceConverter x:Key="icoToSource" />
        <local:ListBoxSelectedConverter x:Key="lbSelected" />
        <local:EnumConverter x:Key="enumConverter" />
        <local:UptimeConverter x:Key="uptimeConverter"/>


        <CompositeCollection x:Key="ExecutableMenuItems" x:Shared="False">
            <MenuItem Header="{Binding Path=Uptime, Converter={StaticResource uptimeConverter}}" Visibility="{Binding Path=Running, Converter={StaticResource boolToVisibility}}" IsEnabled="True" IsHitTestVisible="False">
                <MenuItem.Icon>
                    <Path Width="12" Height="12" Style="{StaticResource TimeIcon}" />
                </MenuItem.Icon>
            </MenuItem>
            <Separator Visibility="{Binding Path=Running, Converter={StaticResource boolToVisibility}}" />
            <MenuItem Header="{x:Static l:Resources.ContextMenuExecStartItemHeader}" IsEnabled="{Binding Path=Running, Converter={StaticResource invertBool}}" Click="Start_item_Click">
                <MenuItem.Icon>
                    <Path Width="12" Height="12" x:Name="IconPath" Style="{StaticResource PlayIcon}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{x:Static l:Resources.ContextMenuExecStopItemHeader}" IsEnabled="{Binding Path=Running}" Click="Stop_item_Click">
                <MenuItem.Icon>
                    <Path Width="12" Height="12" Fill="{StaticResource Foreground}" Style="{StaticResource StopIcon}"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{x:Static l:Resources.ContextMenuExecRestartItemHeader}" IsEnabled="{Binding Path=Running}" Click="Restart_item_Click">
                <MenuItem.Icon>
                    <Path Width="12" Height="12" Fill="{StaticResource Foreground}" Style="{StaticResource RestartIcon}"/>
                </MenuItem.Icon>
            </MenuItem>

            <Separator Visibility="{Binding Path=IsServer,Converter={StaticResource boolToVisibility}}"/>
            <MenuItem Header="{x:Static l:Resources.ContextMenuExecDiagItemHeader}" Visibility="{Binding Path=IsServer,Converter={StaticResource boolToVisibility}}" Click="Diag_item_Click">
                <MenuItem.Icon>
                    <Path Width="12" Height="12" Fill="{StaticResource Foreground}" Style="{StaticResource DiagIcon}"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{x:Static l:Resources.ContextMenuExecGridItemHeader}" Visibility="{Binding Path=IsServer,Converter={StaticResource boolToVisibility}}" Click="Grid_item_Click">
                <MenuItem.Icon>
                    <Path Width="12" Height="12" Fill="{StaticResource Foreground}" Style="{StaticResource GridIcon}"/>
                </MenuItem.Icon>
            </MenuItem>

            <Separator Visibility="{Binding Path=IsScanner,Converter={StaticResource boolToVisibility}}"/>
            <MenuItem Header="{x:Static l:Resources.ContextMenuRebuildMediaDbItemHeader}" Visibility="{Binding Path=IsScanner,Converter={StaticResource boolToVisibility}}" Click="Rebuild_item_Click">
                <MenuItem.Icon>
                    <Path Width="12" Height="12" Fill="{StaticResource Foreground}" Style="{StaticResource RefreshIcon}"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator />
            <MenuItem Header="{x:Static l:Resources.ContextMenuExecConfigItemHeader}" Click="Config_item_Click">
                <MenuItem.Icon>
                    <Path Width="12" Height="12" Fill="{StaticResource Foreground}" Style="{StaticResource ConfigIcon}"/>
                </MenuItem.Icon>
            </MenuItem>
        </CompositeCollection>
        <Viewbox x:Key="ExecutableNotFoundIcon" x:Shared="False" Width="16" Visibility="{Binding Path=Exists, Converter={StaticResource invBoolToVisibility}}">
            <Grid>
                <Path Fill="Black" Width="512" Height="512" Data="M26,474.79a20,20,0,0,1-17.32-30l230-398.37a20,20,0,0,1,34.64,0l230,398.37a20,20,0,0,1-17.32,30Z"/>
                <Path Fill="Yellow" Width="512" Height="512" Data="M256,56.42,26,454.79H486Zm-24.67,123A20,20,0,0,1,246,173h20a20,20,0,0,1,19.94,21.51l-10,132a20,20,0,0,1-39.88,0l-10-132A20,20,0,0,1,231.33,179.4ZM256,427a30,30,0,1,1,30-30A30,30,0,0,1,256,427Z"/>
            </Grid>
        </Viewbox>
        <Image Width="16" Height="16" x:Key="ExecutableIconImage" x:Shared="False" Source="{Binding Path=Icon, Converter={StaticResource icoToSource}}"/>
        <Style x:Key="ExecutableItemStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource StandardMenuItem}">
            <Setter Property="Icon" Value="{StaticResource ExecutableIconImage}"/>
            <Setter Property="Header" Value="{Binding Path=Name}"/>
            <Setter Property="ItemsSource" Value="{StaticResource ExecutableMenuItems}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Exists}" Value="False">
                    <Setter Property="Icon" Value="{StaticResource ExecutableNotFoundIcon}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <local:TrayMenuStyleSelector x:Key="trayMenuItemStyle" ExecutableItemStyle="{StaticResource ExecutableItemStyle}" MenuItemStyle="{StaticResource StandardMenuItem}"/>
        <CollectionViewSource x:Key="ExecutablesCollection" Source="{Binding Path=Executables}" />
        <CompositeCollection x:Key="TrayMenuItems" x:Shared="False">
            <MenuItem Header="{x:Static l:Resources.ContextMenuStartAllHeader}" Click="StartAll">
                <MenuItem.Icon>
                    <Path Width="12" Height="12" Fill="{StaticResource Foreground}" Style="{StaticResource PlayIcon}"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{x:Static l:Resources.ContextMenuStopAllHeader}" Click="StopAll">
                <MenuItem.Icon>
                    <Path Width="12" Height="12" Fill="{StaticResource Foreground}" Style="{StaticResource StopIcon}"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{x:Static l:Resources.ContextMenuRestartAllHeader}" Click="RestartAll">
                <MenuItem.Icon>
                    <Path Width="12" Height="12" Fill="{StaticResource Foreground}" Style="{StaticResource RestartIcon}"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <CollectionContainer Collection="{Binding Source={StaticResource ExecutablesCollection}}" />
            <Separator/>
            <MenuItem Header="{x:Static l:Resources.ContextMenuExitItemHeader}" Click="TrayMenu_ExitItem_Click"/>
        </CompositeCollection>
    </Window.Resources>
    <Window.ContextMenu>
        <ContextMenu Name="TrayMenu" StaysOpen="True" Placement="MousePoint" ItemsSource="{StaticResource TrayMenuItems}" ItemContainerStyleSelector="{StaticResource trayMenuItemStyle}"/>
    </Window.ContextMenu>
    <Grid>
        <Grid Name="ConsoleTabs" Grid.Row="1">
            <Grid.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource StandardButton}">
                    <Setter Property="Margin" Value="2" />
                    <Setter Property="Height" Value="30" />
                    <Setter Property="Focusable" Value="False" />
                </Style>
                <Style TargetType="Viewbox">
                    <Setter Property="Margin" Value="4" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                </Style>
            </Grid.Resources>
            <TabControl Name="Tabs" IsEnabled="True" SelectedIndex="0" Focusable="False">
                <TabControl.ItemContainerStyle>
                    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource StandardTabItem}">
                        <Setter Property="Header" Value="{Binding Path=Name}" />
                        <Setter Property="IsEnabled" Value="True" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                    </Style>
                </TabControl.ItemContainerStyle>
                <TabControl.Resources>
                    <DataTemplate DataType="{x:Type local:Executable}">
                        <Grid>
                            <Grid.Resources>
                                <Style TargetType="Button" BasedOn="{StaticResource StandardButton}">
                                    <Setter Property="Margin" Value="2" />
                                    <Setter Property="Height" Value="30" />
                                </Style>
                                <Style TargetType="Viewbox">
                                    <Setter Property="Margin" Value="4" />
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Background="{StaticResource Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.Resources>
                                    <ObjectDataProvider x:Key="LogLevelList" ObjectType="{x:Type sys:Enum}" MethodName="GetValues">
                                        <ObjectDataProvider.MethodParameters>
                                            <x:Type TypeName="local:LogLevel" />
                                        </ObjectDataProvider.MethodParameters>
                                    </ObjectDataProvider>
                                </Grid.Resources>
                                <StackPanel Orientation="Horizontal">
                                    <Button Name="StartButton" Click="StartButton_Click" IsEnabled="{Binding Path=Running, Converter={StaticResource invertBool}}">
                                        <Viewbox>
                                            <Path Style="{StaticResource PlayIcon}" Margin="20" />
                                        </Viewbox>
                                    </Button>
                                    <Button Name="StopButton" Click="StopButton_Click" IsEnabled="{Binding Path=Running}">
                                        <Viewbox>
                                            <Path Style="{StaticResource StopIcon}" Margin="20" />
                                        </Viewbox>
                                    </Button>
                                    <Button Name="RestartButton" Click="RestartButton_Click" IsEnabled="{Binding Path=Running}">
                                        <Viewbox>
                                            <Path Style="{StaticResource RestartIcon}" Margin="20" />
                                        </Viewbox>
                                    </Button>
                                </StackPanel>
                                <TextBox Visibility="{Binding AllowCommands, Converter={StaticResource boolToVisibility}}" Name="ConsoleCommandTextBox" Grid.Column="1" FontFamily="Consolas" FontSize="14" VerticalContentAlignment="Center" Text="{Binding Path=CurrentCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10 2 1 2"/>
                                <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="9 0 -1 0">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsServer}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=IsScanner}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <Button Name="OpenGridButton" Click="OpenGrid_Click" Visibility="{Binding Path=IsServer, Converter={StaticResource boolToVisibility}}" IsEnabled="{Binding Path=Running}">
                                        <Viewbox>
                                            <Path Style="{StaticResource GridIcon}" Margin="20" />
                                        </Viewbox>
                                    </Button>
                                    <Button Name="OpenDiagButton" Click="OpenDiag_Click" Visibility="{Binding Path=IsServer, Converter={StaticResource boolToVisibility}}" IsEnabled="{Binding Path=Running}">
                                        <Viewbox>
                                            <Path Style="{StaticResource DiagIcon}" Margin="20" />
                                        </Viewbox>
                                    </Button>
                                    <ComboBox VerticalContentAlignment="Center" IsEnabled="{Binding Path=Running}" Visibility="{Binding Path=IsServer, Converter={StaticResource boolToVisibility}}" ItemsSource="{Binding Source={StaticResource LogLevelList}}" SelectedValue="{Binding Path=CurrentLogLevel, Mode=TwoWay}" Margin="2">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type local:LogLevel}">
                                                <TextBlock Text="{Binding Converter={StaticResource enumConverter}}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <Button Name="RebuildButton" Click="RebuildMedia_Click" Visibility="{Binding Path=IsScanner, Converter={StaticResource boolToVisibility}}">
                                        <Viewbox>
                                            <Path Style="{StaticResource RefreshIcon}" Margin="20" />
                                        </Viewbox>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <Grid Grid.Row="1">
                                <DataGrid Name="ConsoleOutputDataGrid" ScrollViewer.ScrollChanged="ConsoleOutputDataGrid_ScrollChanged" HorizontalContentAlignment="Stretch" ItemsSource="{Binding Path=Output, Mode=OneWay}"  ClipboardCopyMode="ExcludeHeader" HeadersVisibility="None" EnableRowVirtualization="True" EnableColumnVirtualization="False" AutoGenerateColumns="False"  CanUserResizeRows="False" CanUserResizeColumns="False" CanUserReorderColumns="False" CanUserSortColumns="False" CanUserAddRows="False">
                                    <DataGrid.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource StandardDataGridCell}">
                                            <Setter Property="Padding" Value="3 0 3 1"/>
                                        </Style>
                                    </DataGrid.CellStyle>
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn Width="Auto" ClipboardContentBinding="{Binding Path=Data, Mode=OneWay}">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type local:LogLine}">
                                                    <Grid>
                                                        <TextBlock Name="DirectOutpuTextBlock" FontFamily="Consolas" FontSize="12" Text="{Binding Data}" Visibility="{Binding DirectOutput, Converter={StaticResource boolToVisibility}}"/>
                                                        <TextBlock Name="ServerOutpuTextBlock" LineStackingStrategy="BlockLineHeight" LineHeight="12" FontFamily="Consolas" FontSize="12" Visibility="{Binding DirectOutput, Converter={StaticResource invBoolToVisibility}}" IsHitTestVisible="False">
                                                            <Run Text="{Binding Timestamp, Mode=OneWay}" FontSize="9" Foreground="{StaticResource BorderBrushHighlighted}"/>
                                                            <Run Name="LogLevelDisplay" FontWeight="Bold" Text="{Binding Level, Mode=OneWay}"/>
                                                            <Run Name="MessageDisplay" Text="{Binding Message, Mode=OneWay}"/>
                                                        </TextBlock>
                                                    </Grid>
                                                    <DataTemplate.Triggers>

                                                        <DataTrigger Binding="{Binding Path=Level, Mode=OneWay}">
                                                            <DataTrigger.Value>
                                                                <local:LogLevel>_trace</local:LogLevel>
                                                            </DataTrigger.Value>
                                                            <Setter TargetName="MessageDisplay"  Property="Foreground" Value="#DDBBFF"/>
                                                            <Setter TargetName="LogLevelDisplay"  Property="Foreground" Value="#DD00EE"/>
                                                            <Setter TargetName="LogLevelDisplay"  Property="Text" Value="[trace]   "/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=Level, Mode=OneWay}">
                                                            <DataTrigger.Value>
                                                                <local:LogLevel>_debug</local:LogLevel>
                                                            </DataTrigger.Value>
                                                            <Setter TargetName="MessageDisplay"  Property="Foreground" Value="#BBDDFF"/>
                                                            <Setter TargetName="LogLevelDisplay"  Property="Foreground" Value="#00CCFF"/>
                                                            <Setter TargetName="LogLevelDisplay"  Property="Text" Value="[debug]   "/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=Level, Mode=OneWay}">
                                                            <DataTrigger.Value>
                                                                <local:LogLevel>_info</local:LogLevel>
                                                            </DataTrigger.Value>
                                                            <Setter TargetName="MessageDisplay"  Property="Foreground" Value="#BBFFDD"/>
                                                            <Setter TargetName="LogLevelDisplay"  Property="Foreground" Value="#00FF88"/>
                                                            <Setter TargetName="LogLevelDisplay"  Property="Text" Value="[info]    "/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=Level, Mode=OneWay}">
                                                            <DataTrigger.Value>
                                                                <local:LogLevel>_warning</local:LogLevel>
                                                            </DataTrigger.Value>
                                                            <Setter TargetName="MessageDisplay"  Property="Foreground" Value="#FFEEBB"/>
                                                            <Setter TargetName="LogLevelDisplay"  Property="Foreground" Value="#FFDD00"/>
                                                            <Setter TargetName="LogLevelDisplay"  Property="Text" Value="[warning] "/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=Level, Mode=OneWay}">
                                                            <DataTrigger.Value>
                                                                <local:LogLevel>_error</local:LogLevel>
                                                            </DataTrigger.Value>
                                                            <Setter TargetName="MessageDisplay"  Property="Foreground" Value="#FFAA99"/>
                                                            <Setter TargetName="LogLevelDisplay"  Property="Foreground" Value="#FF6600"/>
                                                            <Setter TargetName="LogLevelDisplay"  Property="Text" Value="[error]   "/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=Level, Mode=OneWay}">
                                                            <DataTrigger.Value>
                                                                <local:LogLevel>_fatal</local:LogLevel>
                                                            </DataTrigger.Value>
                                                            <Setter TargetName="MessageDisplay"  Property="Foreground" Value="#FF5555"/>
                                                            <Setter TargetName="LogLevelDisplay"  Property="Foreground" Value="Red"/>
                                                            <Setter TargetName="LogLevelDisplay"  Property="Text" Value="[fatal]   "/>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </TabControl.Resources>
                <TabControl.ItemsSource>
                    <CompositeCollection>
                        <TabItem Header="{x:Static l:Resources.StatusTabHeader}">
                            <ItemsControl ItemsSource="{Binding Path=Executables}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="{Binding Path=Executables.Count, Converter={StaticResource itemsToCols}}" Rows="{Binding Path=Executables.Count, Converter={StaticResource itemsToRows}}"></UniformGrid>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type local:Executable}">
                                        <Grid Margin="10">
                                            <Grid.ContextMenu>
                                                <ContextMenu ItemsSource="{StaticResource ExecutableMenuItems}"/>
                                            </Grid.ContextMenu>
                                            <Button Name="ExecutableButton" MinWidth="100" MaxWidth="375" MinHeight="80" MaxHeight="300" Click="ExecutableButton_Click">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource StandardButton}">
                                                        <Setter Property="BorderBrush" Value="Transparent" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=Running, Mode=OneWay}" Value="False" />
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="False" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="{StaticResource BackgroundPlaying}" />
                                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=Running, Mode=OneWay}" Value="False" />
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="False" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="{StaticResource BackgroundHighlightedPlaying}" />
                                                                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlightedPlaying}" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=Running, Mode=OneWay}" Value="False" />
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="{StaticResource BackgroundSelectedPlaying}" />
                                                                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelectedPlaying}" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=Running, Mode=OneWay}" Value="True" />
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="False" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="{StaticResource BackgroundGreen}" />
                                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=Running, Mode=OneWay}" Value="True" />
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="False" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="{StaticResource BackgroundHighlightedGreen}" />
                                                                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlightedGreen}" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=Running, Mode=OneWay}" Value="True" />
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="{StaticResource BackgroundSelectedGreen}" />
                                                                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelectedGreen}" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Viewbox Margin="5" Width="32" Visibility="{Binding Path=Exists, Converter={StaticResource invBoolToVisibility}}">
                                                        <Grid>
                                                            <Path Fill="Black" Width="512" Height="512" Data="M26,474.79a20,20,0,0,1-17.32-30l230-398.37a20,20,0,0,1,34.64,0l230,398.37a20,20,0,0,1-17.32,30Z"/>
                                                            <Path Fill="Yellow" Width="512" Height="512" Data="M256,56.42,26,454.79H486Zm-24.67,123A20,20,0,0,1,246,173h20a20,20,0,0,1,19.94,21.51l-10,132a20,20,0,0,1-39.88,0l-10-132A20,20,0,0,1,231.33,179.4ZM256,427a30,30,0,1,1,30-30A30,30,0,0,1,256,427Z"/>
                                                        </Grid>
                                                    </Viewbox>
                                                    <Image Margin="5" Width="32" Source="{Binding Path=Icon, Converter={StaticResource icoToSource}, Mode=OneWay}" Visibility="{Binding Path=Exists, Converter={StaticResource boolToVisibility}}" />
                                                    <TextBlock Margin="5" Text="{Binding Path=Name, Mode=OneWay}" />
                                                    <TextBlock Margin="0 10 0 0" Text="{Binding Path=Uptime, Converter={StaticResource uptimeConverter}}" Visibility="{Binding Path=Running, Converter={StaticResource boolToVisibility}}" Opacity=".5"/>
                                                </StackPanel>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </TabItem>
                        <CollectionContainer Collection="{Binding Source={StaticResource ExecutablesCollection}}" />
                        <TabItem Name="ConfigTab">
                            <TabItem.Resources>
                                <Style x:Key="PropertyNameTextBlock" TargetType="TextBlock">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Margin" Value="5" />
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                                <Style x:Key="FieldDescriptionTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource PropertyNameTextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="FontSize" Value="10" />
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                    <Setter Property="LineHeight" Value="8" />
                                    <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
                                    <Setter Property="Foreground" Value="{StaticResource LightBackground}" />
                                </Style>
                                <Style x:Key="SettingsField" TargetType="TextBox" BasedOn="{StaticResource StandardTextBox}">
                                    <Setter Property="Width" Value="50" />
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource PropertyNameTextBlock}" />
                                <Style x:Key="DataGridTextColumnStyle" TargetType="TextBox">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="{StaticResource Foreground}" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="CaretBrush" Value="{StaticResource Foreground}" />
                                </Style>

                                <GridLength x:Key="DescColWidth">160</GridLength>
                                <GridLength x:Key="IntValueWidth">70</GridLength>
                            </TabItem.Resources>
                            <TabItem.Header>
                                <Viewbox Width="12">
                                    <Path Style="{StaticResource ConfigIcon}" />
                                </Viewbox>
                            </TabItem.Header>
                            <ScrollViewer Focusable="False" VerticalScrollBarVisibility="Auto">
                                <StackPanel>
                                    <GroupBox>
                                        <GroupBox.Header>
                                            <Grid>
                                                <TextBlock HorizontalAlignment="Left" Margin="0 5" Text="{x:Static l:Resources.ConfigTabExecGbHeader}" />
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                                    <Button Name="StartExecutableButton" Style="{StaticResource PlayButton}" Height="16" Margin="2 0 2 0" Click="StartAll" />
                                                    <Button Name="StopExecutableButton" Style="{StaticResource StopButton}" Height="16" Margin="2 0" Click="StopAll" />
                                                    <Button Name="RestartExecutableButton" Style="{StaticResource RestartButton}" Height="16" Margin="5 0" Click="RestartAll" />
                                                    <Border Width="32" />
                                                    <Button Name="AddExecutableButton" Style="{StaticResource PlusButton}" Height="16" Margin="10 0" Click="AddExecutableButton_Click" />
                                                </StackPanel>
                                            </Grid>
                                        </GroupBox.Header>
                                        <ItemsControl ItemsSource="{Binding Path=Executables}" Focusable="False">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Grid.IsSharedSizeScope="True" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="{x:Type local:Executable}">
                                                    <Grid Margin="0 2">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="ExecutableNameCSG" />
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <StackPanel Margin="0 0 10 0" Grid.Column="0" Orientation="Horizontal">
                                                            <Viewbox Margin="5" Width="16" Visibility="{Binding Path=Exists, Converter={StaticResource invBoolToVisibility}}">
                                                                <Grid>
                                                                    <Path Fill="Black" Width="512" Height="512" Data="M26,474.79a20,20,0,0,1-17.32-30l230-398.37a20,20,0,0,1,34.64,0l230,398.37a20,20,0,0,1-17.32,30Z"/>
                                                                    <Path Fill="Yellow" Width="512" Height="512" Data="M256,56.42,26,454.79H486Zm-24.67,123A20,20,0,0,1,246,173h20a20,20,0,0,1,19.94,21.51l-10,132a20,20,0,0,1-39.88,0l-10-132A20,20,0,0,1,231.33,179.4ZM256,427a30,30,0,1,1,30-30A30,30,0,0,1,256,427Z"/>
                                                                </Grid>
                                                            </Viewbox>
                                                            <Image Margin="5 0" Width="16" Source="{Binding Path=Icon, Converter={StaticResource icoToSource}, Mode=OneWay}" Visibility="{Binding Path=Exists, Converter={StaticResource boolToVisibility}}" />
                                                            <TextBlock Grid.Column="1" Text="{Binding Name}" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                                        </StackPanel>
                                                        <TextBlock Grid.Column="1" Text="{Binding Path=Path, Mode=OneWay}" Style="{StaticResource FieldDescriptionTextBlock}" />
                                                        <TextBlock Grid.Column="2" Margin="10 0 20 0" VerticalAlignment="Center" Text="{Binding Path=Uptime, Converter={StaticResource uptimeConverter}}" Visibility="{Binding Path=Running, Converter={StaticResource boolToVisibility}}" Opacity=".5"/>
                                                        <StackPanel Grid.Column="3" Orientation="Horizontal">
                                                            <Button Name="ExecutableStart" Height="16" Padding="5 0" Click="StartButton_Click" Style="{StaticResource PlayButton}" IsEnabled="{Binding Path=Running, Converter={StaticResource invertBool}}" />
                                                            <Button Name="ExecutableStop" Height="16" Padding="5 0" Click="StopButton_Click" Style="{StaticResource StopButton}" IsEnabled="{Binding Path=Running}" />
                                                            <Button Name="ExecutableRestart" Height="16" Margin="5 0" Click="RestartButton_Click" Style="{StaticResource RestartButton}" IsEnabled="{Binding Path=Running}" />
                                                            <Border Width="10" />
                                                            <Button Name="ExecutableConfig" Height="16" Padding="5 0" Style="{StaticResource ConfigButton}" Click="ExecutableConfig_Click" />
                                                            <Border Width="10" />
                                                            <Button Name="ExecutableRemove" Foreground="#CC0000" Height="16" Padding="5 0" Style="{StaticResource TrashButton}" IsEnabled="{Binding Path=Running, Converter={StaticResource invertBool}}" Click="ExecutableRemove_Click" />
                                                        </StackPanel>
                                                    </Grid>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </GroupBox>
                                    <GroupBox Header="{x:Static l:Resources.ConfigTabServerConfigHeader}">
                                        <StackPanel>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{StaticResource DescColWidth}" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{x:Static l:Resources.ConfigFileText}" Grid.Column="0" Margin="5,7" />
                                                <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Left">
                                                    <Button Name="EditConfigButton" Padding="10 0" Content="{x:Static l:Resources.OpenConfigEditorEditButtonText}" Click="EditConfigButton_Click" />
                                                    <Button Name="NewConfigButton" Padding="10 0" Content="{x:Static l:Resources.OpenConfigEditorNewButtonText}" Click="NewConfigButton_Click" HorizontalAlignment="Left" />
                                                </StackPanel>
                                                <TextBlock Grid.Column="2" Text="{x:Static l:Resources.ConfigTabEditConfigFilesDesc}" Style="{StaticResource FieldDescriptionTextBlock}" />
                                            </Grid>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="{x:Static l:Resources.ConfigTabOptionsCbHead}">
                                        <StackPanel>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{StaticResource DescColWidth}" />
                                                    <ColumnDefinition MinWidth="50" Width="{StaticResource IntValueWidth}" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{x:Static l:Resources.ConfigBufferLines}" Grid.Column="0" Margin="5,7" />
                                                <TextBox Grid.Column="1" Margin="1 2" Text="{Binding Path=BufferLines, Mode=TwoWay}" VerticalContentAlignment="Center" />
                                            </Grid>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{StaticResource DescColWidth}" />
                                                    <ColumnDefinition MinWidth="50" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{x:Static l:Resources.ConfigOpenAtLogin}" Grid.Column="0" Margin="5,7" />
                                                <CheckBox Grid.Column="1" Padding="0" Margin="2 0" HorizontalAlignment="Left" IsChecked="{Binding Path=OpenAtLogin, Mode=TwoWay}" />
                                            </Grid>
                                            <Grid>
                                                <Grid.Resources>
                                                    <ObjectDataProvider x:Key="LanguagesList" ObjectType="{x:Type sys:Enum}" MethodName="GetValues">
                                                        <ObjectDataProvider.MethodParameters>
                                                            <x:Type TypeName="local:Languages" />
                                                        </ObjectDataProvider.MethodParameters>
                                                    </ObjectDataProvider>
                                                </Grid.Resources>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{StaticResource DescColWidth}" />
                                                    <ColumnDefinition MinWidth="50" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{x:Static l:Resources.ConfigTabLangValue}" Grid.Column="0" Margin="5,7" />
                                                <ComboBox Margin="2 1" Grid.Column="1" VerticalContentAlignment="Center" ItemsSource="{Binding Source={StaticResource LanguagesList}}" SelectedValue="{Binding Path=SelectedLanguage}" HorizontalAlignment="Left">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate DataType="{x:Type local:Languages}">
                                                            <TextBlock Text="{Binding Converter={StaticResource enumConverter}}" />
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="{x:Static l:Resources.ConfigTabAboutGb}">
                                        <StackPanel>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{StaticResource DescColWidth}" />
                                                    <ColumnDefinition MinWidth="50" Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{x:Static l:Resources.ConfigTabAboutProjectName}" Grid.Column="0" Margin="5,7" VerticalAlignment="Top" />
                                                <Grid Grid.Column="1" HorizontalAlignment="Stretch">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Grid.Row="0" Foreground="{StaticResource BorderBrushHighlighted}" TextWrapping="Wrap" Text="{x:Static l:Resources.ConfigTabAboutProjectDescription}" TextAlignment="Left" HorizontalAlignment="Stretch" />
                                                    <TextBlock Grid.Row="1" TextAlignment="Left" HorizontalAlignment="Stretch">
                                                        <TextBlock.Resources>
                                                            <Style TargetType="{x:Type Hyperlink}">
                                                                <Setter Property="Foreground" Value="{StaticResource BackgroundSelected}" />
                                                                <Setter Property="TextDecorations" Value="None" />
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="true">
                                                                        <Setter Property="Foreground" Value="{StaticResource BorderBrushSelected}" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Resources>
                                                        <Hyperlink TextDecorations="" NavigateUri="https://casparcg.com" RequestNavigate="Hyperlink_RequestNavigate">https://casparcg.com</Hyperlink><LineBreak />
                                                        <Hyperlink NavigateUri="https://github.com/CasparCG/help/wiki" RequestNavigate="Hyperlink_RequestNavigate">https://github.com/CasparCG/help/wiki</Hyperlink><LineBreak />
                                                        <Hyperlink NavigateUri="https://casparcgforum.org" RequestNavigate="Hyperlink_RequestNavigate">https://casparcgforum.org</Hyperlink>
                                                    </TextBlock>
                                                </Grid>
                                            </Grid>
                                        </StackPanel>
                                    </GroupBox>
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                    </CompositeCollection>
                </TabControl.ItemsSource>
            </TabControl>
        </Grid>
    </Grid>
</Window>