<ui:AppWindow   x:Class="CasparLauncher.StatusWindow" x:Name="LauncherWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:local="clr-namespace:CasparLauncher"
                xmlns:launcher="clr-namespace:CasparLauncher.Launcher"
                xmlns:cg="clr-namespace:CasparLauncher.CasparCG"
                xmlns:e="clr-namespace:CasparLauncher.CasparCG.Configuration.Enums"
                xmlns:l="clr-namespace:CasparLauncher.Properties"
                xmlns:sys="clr-namespace:System;assembly=mscorlib"
                xmlns:ui="clr-namespace:BaseUISupport.Controls;assembly=BaseUISupport"
                xmlns:converters="clr-namespace:BaseUISupport.Converters;assembly=BaseUISupport"
                xmlns:helpers="clr-namespace:BaseUISupport.Helpers;assembly=BaseUISupport"
                mc:Ignorable="d"
                CaptionHeight="50"
                Top="{Binding ElementName=LauncherWindow, Path=PosY, Mode=TwoWay}"
                Left="{Binding ElementName=LauncherWindow, Path=PosX, Mode=TwoWay}"
                Height="{Binding ElementName=LauncherWindow, Path=WindowHeight, Mode=TwoWay}"
                Width="{Binding ElementName=LauncherWindow, Path=WindowWidth, Mode=TwoWay}"
                WindowState="{Binding ElementName=LauncherWindow, Path=State, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                MinWidth="600" MinHeight="312"
                ContextMenuService.IsEnabled="False"
                WindowStartupLocation="Manual" Title="{helpers:Localization AppTitle}" WindowStyle="SingleBorderWindow"
                FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}" WindowBackground="Transparent">
    <ui:AppWindow.Resources>
        <converters:InvertBooleanConverter x:Key="InvertBool"/>
        <converters:IcoToImageSourceConverter x:Key="IcoConverter" />
        <converters:StringToImageConverter x:Key="StringToImageConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BoolToVisibility" True="Visible" False="Collapsed"/>
        <converters:BooleanToVisibilityConverter x:Key="InvertBoolToVisibility" True="Collapsed" False="Visible"/>
        <converters:EqualityConverter x:Key="EqualityConverter" />
        <converters:InequalityConverter x:Key="InequalityConverter" />
        <converters:BooleanOrConverter x:Key="orConverter"/>
        <converters:IcoToImageSourceConverter x:Key="icoToSource" />
        <converters:UptimeConverter x:Key="UptimeConverter" />
        <converters:EnumConverter x:Key="enumConverter" />
        <converters:LocalizedEnumConverter x:Key="localizedEnumConverter" />
    </ui:AppWindow.Resources>

    <ui:AppWindow.WindowIcon>
        <Grid Margin="0 3">
            <Image Source="{Binding Source={x:Static local:App.AppIcon}, Converter={StaticResource IcoConverter}}"/>
        </Grid>
    </ui:AppWindow.WindowIcon>
    <ui:AppWindow.MenuBar>
        <Menu>
            <MenuItem Header="{helpers:Localization MenuBarOptionsMenuHeader}">
                <MenuItem.Resources>
                    <ObjectDataProvider x:Key="LanguagesList" ObjectType="{x:Type sys:Enum}" MethodName="GetValues">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="local:Languages" />
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                </MenuItem.Resources>
                <MenuItem Header="{helpers:Localization MenuBarOptionsNotifications}">
                    <MenuItem.Icon>
                        <Path Width="12" Height="12" Fill="{DynamicResource Foreground}" Style="{DynamicResource BellIcon}" />
                    </MenuItem.Icon>
                    <MenuItem Header="{helpers:Localization MenuBarOptionsNotificationsStarted}" IsCheckable="True" IsChecked="{Binding Path=NotifyStart, Mode=TwoWay}">
                    </MenuItem>
                    <MenuItem Header="{helpers:Localization MenuBarOptionsNotificationsStopped}" IsCheckable="True" IsChecked="{Binding Path=NotifyStop, Mode=TwoWay}">
                    </MenuItem>
                    <MenuItem Header="{helpers:Localization MenuBarOptionsNotificationsErrors}" IsCheckable="True" IsChecked="{Binding Path=NotifyError, Mode=TwoWay}">
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{helpers:Localization MenuBarOptionsLanguage}" ItemsSource="{Binding Source={StaticResource LanguagesList}}">
                    <MenuItem.Icon>
                        <Path Width="12" Height="12" Fill="{DynamicResource Foreground}" Style="{DynamicResource GlobeIcon}" />
                    </MenuItem.Icon>
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MenuItem}">
                            <Setter Property="IsCheckable" Value="True"/>
                            <Setter Property="IsChecked">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource EqualityConverter}" Mode="OneWay">
                                        <Binding Path="" />
                                        <Binding Source="{x:Static local:App.Launchpad}" Path="ForcedLanguage"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <EventSetter Event="Click" Handler="ForcedLanguage_Click"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                    <MenuItem.ItemTemplate>
                        <DataTemplate DataType="{x:Type local:Languages}">
                            <TextBlock Text="{Binding Converter={StaticResource localizedEnumConverter}}" />
                        </DataTemplate>
                    </MenuItem.ItemTemplate>
                </MenuItem>
                <MenuItem Header="{helpers:Localization MenuBarOptionsOpenAtLogin}" IsCheckable="True" IsChecked="{Binding Path=OpenAtLogin, Mode=TwoWay}"/>
            </MenuItem>
            <MenuItem Header="{helpers:Localization MenuBarViewMenuHeader}">
                <MenuItem Header="{helpers:Localization MenuBarViewDarkMode}" IsCheckable="True" IsChecked="{Binding Path=DarkMode, Mode=TwoWay}"/>
                <MenuItem Header="{helpers:Localization MenuBarViewCropLines}" IsCheckable="True" IsChecked="{Binding Path=CropConsole, Mode=TwoWay}" Checked="CropConsoleLines_Checked" Unchecked="CropConsoleLines_Checked"/>
                <MenuItem Header="{helpers:Localization MenuBarViewStylizeConsole}" IsCheckable="True" IsChecked="{Binding Path=StylizeConsole, Mode=TwoWay}"/>
            </MenuItem>
            <MenuItem Header="{helpers:Localization MenuBarHelpMenuHeader}">
                <MenuItem Header="{helpers:Localization MenuBarHelpReportIssue}" Click="ReportIssue_Click"/>
                <MenuItem Header="{helpers:Localization MenuBarHelpCasparCGProject}" Click="CasparCGProject_Click"/>
                <MenuItem Header="{helpers:Localization MenuBarHelpAbout}" Click="About_Click"/>
            </MenuItem>
        </Menu>
    </ui:AppWindow.MenuBar>
    <Grid>
        <ui:TabbedPanel x:Name="ExecutablesTabbedPanel" SelectedIndex="{Binding Source={x:Static local:App.Launchpad}, Path=SelectedTab}">
            <ui:TabbedPanel.ItemContainerStyle>
                <Style TargetType="{x:Type ui:TabbedPanelItem}" BasedOn="{StaticResource TabbedPanelItem}">
                    <Setter Property="DataContext" Value=""/>
                    <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Path Style="{DynamicResource WarnIcon}" Stretch="Uniform" Width="16" Height="16" Margin="2 0" Visibility="{Binding Path=Exists, Converter={StaticResource InvertBoolToVisibility}}"/>
                                    <Image Margin="2 0" Width="16" Source="{Binding Path=Icon, Converter={StaticResource icoToSource}, Mode=OneWay}" Visibility="{Binding Path=Exists, Converter={StaticResource BoolToVisibility}}" />
                                    <TextBlock Text="{Binding Path=Name}" Margin="2 0" LineStackingStrategy="BlockLineHeight" LineHeight="16"/>
                                </StackPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="IsEnabled" Value="True" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Padding" Value="5" />
                </Style>
            </ui:TabbedPanel.ItemContainerStyle>
            <ui:TabbedPanel.Resources>
                <DataTemplate DataType="{x:Type launcher:Executable}" x:Shared="False">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="Button" BasedOn="{StaticResource Button}">
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="Height" Value="30" />
                            </Style>
                            <Style TargetType="Viewbox">
                                <Setter Property="Margin" Value="4" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="SnapsToDevicePixels" Value="True" />
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Background="{DynamicResource Background}" CornerRadius="{DynamicResource CompactRadius}" Grid.RowSpan="2"/>
                        <Grid Grid.Row="0" Visibility="{Binding Path=Exists, Converter={StaticResource BoolToVisibility}}" Margin="0 0 0 -2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.Resources>
                                <ObjectDataProvider x:Key="LogLevelList" ObjectType="{x:Type sys:Enum}" MethodName="GetValues">
                                    <ObjectDataProvider.MethodParameters>
                                        <x:Type TypeName="e:LogLevel" />
                                    </ObjectDataProvider.MethodParameters>
                                </ObjectDataProvider>
                            </Grid.Resources>
                            <StackPanel Orientation="Horizontal">
                                <Button Name="StartButton" Click="StartButton_Click" IsEnabled="{Binding Path=IsRunning, Converter={StaticResource InvertBool}}">
                                    <Viewbox>
                                        <Path Style="{StaticResource PlayIcon}" Margin="20" />
                                    </Viewbox>
                                </Button>
                                <Button Name="StopButton" Click="StopButton_Click" IsEnabled="{Binding Path=IsRunning}">
                                    <Viewbox>
                                        <Path Style="{StaticResource StopIcon}" Margin="20" />
                                    </Viewbox>
                                </Button>
                                <Button Name="RestartButton" Click="RestartButton_Click" IsEnabled="{Binding Path=IsRunning}">
                                    <Viewbox>
                                        <Path Style="{StaticResource RestartIcon}" Margin="20" />
                                    </Viewbox>
                                </Button>
                            </StackPanel>
                            <TextBox Visibility="{Binding AllowCommands, Converter={StaticResource BoolToVisibility}}" Name="ConsoleCommandTextBox" Grid.Column="1" FontFamily="Consolas" FontSize="14" TextBlock.LineHeight="16" VerticalContentAlignment="Center" Text="{Binding Path=CurrentCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="3 1" Margin="2"/>
                            <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="2 0 0 0">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsServer}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsScanner}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <Button Name="OpenGridButton" Click="OpenGrid_Click" Visibility="{Binding Path=IsServer, Converter={StaticResource BoolToVisibility}}" IsEnabled="{Binding Path=IsRunning}">
                                    <Viewbox>
                                        <Path Style="{StaticResource GridIcon}" Margin="20" />
                                    </Viewbox>
                                </Button>
                                <Button Name="OpenDiagButton" Click="OpenDiag_Click" Visibility="{Binding Path=IsServer, Converter={StaticResource BoolToVisibility}}" IsEnabled="{Binding Path=IsRunning}">
                                    <Viewbox>
                                        <Path Style="{StaticResource DiagIcon}" Margin="20" />
                                    </Viewbox>
                                </Button>
                                <ComboBox VerticalContentAlignment="Center" Padding="0" IsEnabled="{Binding Path=IsRunning}" Visibility="{Binding Path=IsServer, Converter={StaticResource BoolToVisibility}}" ItemsSource="{Binding Source={StaticResource LogLevelList}}" SelectedValue="{Binding Path=CurrentLogLevel, Mode=TwoWay}" Margin="2" Grid.IsSharedSizeScope="True">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate DataType="{x:Type e:LogLevel}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="100" Width="Auto" SharedSizeGroup="ComboWidth"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding Converter={StaticResource localizedEnumConverter}}" Margin="4 2" />
                                            </Grid>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Button Name="RebuildButton" Click="RebuildMedia_Click" Visibility="{Binding Path=IsScanner, Converter={StaticResource BoolToVisibility}}">
                                    <Viewbox>
                                        <Path Style="{StaticResource RefreshIcon}" Margin="20" />
                                    </Viewbox>
                                </Button>
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="1" Visibility="{Binding Path=Exists, Converter={StaticResource BoolToVisibility}}" Margin="1">
                            <DataGrid Name="ConsoleOutputDataGrid" ColumnWidth="1*" Initialized="ConsoleOutputDataGrid_Initialized" DataContextChanged="ConsoleOutputDataGrid_DataContextChanged" ScrollViewer.ScrollChanged="ConsoleOutputDataGrid_ScrollChanged" HorizontalContentAlignment="Stretch" ItemsSource="{Binding Path=Output, Mode=OneWay}"  ClipboardCopyMode="ExcludeHeader" HeadersVisibility="None" EnableRowVirtualization="True" EnableColumnVirtualization="False" AutoGenerateColumns="False"  CanUserResizeRows="False" CanUserResizeColumns="False" CanUserReorderColumns="False" CanUserSortColumns="False" CanUserAddRows="False" Margin="0" Padding="0">
                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCell}">
                                        <Setter Property="Padding" Value="3 0 3 1"/>
                                        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
                                    </Style>
                                </DataGrid.CellStyle>
                                <DataGrid.RowHeaderStyle>
                                    <Style TargetType="DataGridRowHeader">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </Style>
                                </DataGrid.RowHeaderStyle>
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn ClipboardContentBinding="{Binding Path=Data, Mode=OneWay}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type cg:LogLine}">
                                                <Grid>
                                                    <TextBlock Name="DirectOutpuTextBlock" FontFamily="Consolas" FontSize="12" Text="{Binding Data}" Visibility="Visible" />
                                                    <TextBlock Name="ServerOutpuTextBlock" LineStackingStrategy="BlockLineHeight" LineHeight="12" FontFamily="Consolas" FontSize="12" IsHitTestVisible="False" Visibility="Collapsed">
                                                            <Run Text="{Binding Timestamp, Mode=OneWay}" FontSize="9" Foreground="{DynamicResource HighlightAccent}"/>
                                                            <Run Name="LogLevelDisplay" FontWeight="Bold" Text="{Binding Level, Mode=OneWay}"/>
                                                            <Run Name="MessageDisplay" Text="{Binding Message, Mode=OneWay}"/>
                                                    </TextBlock>
                                                </Grid>
                                                <DataTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Source={x:Static local:App.Launchpad}, Path=StylizeConsole}" Value="True"/>
                                                            <Condition Binding="{Binding Path=DirectOutput}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter TargetName="DirectOutpuTextBlock" Property="Visibility" Value="Collapsed"/>
                                                        <Setter TargetName="ServerOutpuTextBlock" Property="Visibility" Value="Visible"/>
                                                    </MultiDataTrigger>
                                                    <DataTrigger Binding="{Binding Path=Level, Mode=OneWay}">
                                                        <DataTrigger.Value>
                                                            <e:LogLevel>_trace</e:LogLevel>
                                                        </DataTrigger.Value>
                                                        <Setter TargetName="MessageDisplay"  Property="Foreground" Value="{DynamicResource ConsoleMainMagenta}"/>
                                                        <Setter TargetName="LogLevelDisplay"  Property="Foreground" Value="{DynamicResource ConsoleHeadMagenta}"/>
                                                        <Setter TargetName="LogLevelDisplay"  Property="Text" Value="[trace]   "/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=Level, Mode=OneWay}">
                                                        <DataTrigger.Value>
                                                            <e:LogLevel>_debug</e:LogLevel>
                                                        </DataTrigger.Value>
                                                        <Setter TargetName="MessageDisplay"  Property="Foreground" Value="{DynamicResource ConsoleMainCyan}"/>
                                                        <Setter TargetName="LogLevelDisplay"  Property="Foreground" Value="{DynamicResource ConsoleHeadCyan}"/>
                                                        <Setter TargetName="LogLevelDisplay"  Property="Text" Value="[debug]   "/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=Level, Mode=OneWay}">
                                                        <DataTrigger.Value>
                                                            <e:LogLevel>_info</e:LogLevel>
                                                        </DataTrigger.Value>
                                                        <Setter TargetName="MessageDisplay"  Property="Foreground" Value="{DynamicResource ConsoleMainGreen}"/>
                                                        <Setter TargetName="LogLevelDisplay"  Property="Foreground" Value="{DynamicResource ConsoleHeadGreen}"/>
                                                        <Setter TargetName="LogLevelDisplay"  Property="Text" Value="[info]    "/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=Level, Mode=OneWay}">
                                                        <DataTrigger.Value>
                                                            <e:LogLevel>_warning</e:LogLevel>
                                                        </DataTrigger.Value>
                                                        <Setter TargetName="MessageDisplay"  Property="Foreground" Value="{DynamicResource ConsoleMainYellow}"/>
                                                        <Setter TargetName="LogLevelDisplay"  Property="Foreground" Value="{DynamicResource ConsoleHeadYellow}"/>
                                                        <Setter TargetName="LogLevelDisplay"  Property="Text" Value="[warning] "/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=Level, Mode=OneWay}">
                                                        <DataTrigger.Value>
                                                            <e:LogLevel>_error</e:LogLevel>
                                                        </DataTrigger.Value>
                                                        <Setter TargetName="MessageDisplay"  Property="Foreground" Value="{DynamicResource ConsoleMainOrange}"/>
                                                        <Setter TargetName="LogLevelDisplay"  Property="Foreground" Value="{DynamicResource ConsoleHeadOrange}"/>
                                                        <Setter TargetName="LogLevelDisplay"  Property="Text" Value="[error]   "/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=Level, Mode=OneWay}">
                                                        <DataTrigger.Value>
                                                            <e:LogLevel>_fatal</e:LogLevel>
                                                        </DataTrigger.Value>
                                                        <Setter TargetName="MessageDisplay"  Property="Foreground" Value="{DynamicResource ConsoleMainRed}"/>
                                                        <Setter TargetName="LogLevelDisplay"  Property="Foreground" Value="{DynamicResource ConsoleHeadRed}"/>
                                                        <Setter TargetName="LogLevelDisplay"  Property="Text" Value="[fatal]   "/>
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                        <Grid Grid.RowSpan="2" Visibility="{Binding Path=Exists, Converter={StaticResource InvertBoolToVisibility}}">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock Foreground="{DynamicResource Foreground}" FontSize="16" Text="{helpers:Localization ExecutableTabNotFoundCaption}" HorizontalAlignment="Center" />
                                <TextBlock Foreground="{DynamicResource HighlightAccent}" FontSize="12" Margin="5" Text="{helpers:Localization ExecutableTabNotFoundMessage}" HorizontalAlignment="Center" />
                                <Button HorizontalAlignment="Center" Click="ExecutableConfig_Click">
                                    <StackPanel Orientation="Horizontal" Margin="2">
                                        <Path Width="16" Margin="2" Style="{DynamicResource ConfigIcon}" VerticalAlignment="Center"/>
                                        <TextBlock Margin="2" Text="{helpers:Localization ExecutableTabOpenConfigButton}" VerticalAlignment="Center" />
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static local:App.Launchpad}, Path=CropConsole}" Value="False">
                            <Setter TargetName="ConsoleOutputDataGrid" Property="ColumnWidth">
                                <Setter.Value>
                                    <DataGridLength>Auto</DataGridLength>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ui:TabbedPanel.Resources>
            <ui:TabbedPanel.ItemsSource>
                <CompositeCollection>
                    <ui:TabbedPanelItem x:Name="ConfigTab" WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource TabbedPanelItem}" DockPanel.Dock="Right" Margin="3 0 0 0">
                        <ui:TabbedPanelItem.Resources>

                            <Style x:Key="PropertyNameTextBlock" TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="5" />
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                            <Style x:Key="FieldDescriptionTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource PropertyNameTextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="FontSize" Value="10" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                                <Setter Property="LineHeight" Value="8" />
                                <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
                                <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabled}" />
                            </Style>
                            <Style x:Key="SettingsField" TargetType="TextBox" BasedOn="{StaticResource TextBox}">
                                <Setter Property="Width" Value="50" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource PropertyNameTextBlock}" />
                            <Style x:Key="DataGridTextColumnStyle" TargetType="TextBox">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="CaretBrush" Value="{DynamicResource Foreground}" />
                            </Style>

                            <sys:Double x:Key="DescColWidth">160</sys:Double>
                            <GridLength x:Key="IntValueWidth">70</GridLength>
                        </ui:TabbedPanelItem.Resources>
                        <ui:TabbedPanelItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <Path Style="{DynamicResource ConfigIcon}" Stretch="Uniform" Width="16" Height="16" Margin="2 0"/>
                            </StackPanel>
                        </ui:TabbedPanelItem.Header>
                        <ScrollViewer Focusable="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                            <Grid Grid.IsSharedSizeScope="True">
                                <Grid.Resources>
                                    <Style TargetType="{x:Type ui:IconButton}" BasedOn="{StaticResource IconButton}">
                                        <Setter Property="Padding" Value="6"/>
                                    </Style>
                                </Grid.Resources>
                                <Border Background="{DynamicResource Background}" Margin="0" Padding="1" CornerRadius="{DynamicResource NormalRadius}" ClipToBounds="True">
                                    <ItemsControl Focusable="False">
                                        <ItemsControl.ItemsSource>
                                            <CompositeCollection>
                                                <Border Margin="1">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Text="{helpers:Localization ConfigTabExecGbHeader}" HorizontalAlignment="Left" FontSize="14" Margin="10 0"/>
                                                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 10 0">
                                                            <ui:IconButton x:Name="StartExecutableButton" Icon="{DynamicResource PlayIcon}" Click="StartAll" />
                                                            <ui:IconButton x:Name="StopExecutableButton" Icon="{DynamicResource StopIcon}" Click="StopAll" />
                                                            <ui:IconButton x:Name="RestartExecutableButton" Icon="{DynamicResource RestartIcon}" Click="RestartAll" />
                                                            <Border Width="10" />
                                                            <ui:IconButton x:Name="AddExecutableButton" Icon="{DynamicResource PlusIcon}" Click="AddExecutableButton_Click" />
                                                        </StackPanel>
                                                    </Grid>
                                                </Border>
                                                <CollectionContainer Collection="{Binding Source={x:Static local:App.Launchpad}, Path=Executables}"/>
                                            </CompositeCollection>
                                        </ItemsControl.ItemsSource>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Grid.IsSharedSizeScope="True" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="{x:Type launcher:Executable}">
                                                <Grid Margin="1">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" SharedSizeGroup="ExecutableListCommandsSG" />
                                                    </Grid.ColumnDefinitions>
                                                    <Button x:Name="StatusButton" Grid.ColumnSpan="5" Background="{DynamicResource BaseBgRed}" Click="ExecutableButton_Click" Margin="0"/>
                                                    <Grid IsHitTestVisible="False">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="ExecutableIconCSG" />
                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="ExecutableDetailsCSG" />
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid Grid.Column="0" Margin="5">
                                                            <Viewbox Margin="5" Width="32" Visibility="{Binding Path=Exists, Converter={StaticResource InvertBoolToVisibility}}">
                                                                <Grid>
                                                                    <Path Fill="Yellow" Width="512" Height="512" Data="M256,56.42,26,454.79H486Zm-24.67,123A20,20,0,0,1,246,173h20a20,20,0,0,1,19.94,21.51l-10,132a20,20,0,0,1-39.88,0l-10-132A20,20,0,0,1,231.33,179.4ZM256,427a30,30,0,1,1,30-30A30,30,0,0,1,256,427Z"/>
                                                                </Grid>
                                                            </Viewbox>
                                                            <Image Margin="5" Width="32" Source="{Binding Path=Icon, Converter={StaticResource icoToSource}, Mode=OneWay}" Visibility="{Binding Path=Exists, Converter={StaticResource BoolToVisibility}}" />
                                                        </Grid>
                                                        <Grid Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto" SharedSizeGroup="ExecutableNameCSG"/>
                                                                <RowDefinition Height="Auto" SharedSizeGroup="ExecutablePathCSG"/>
                                                            </Grid.RowDefinitions>
                                                            <TextBlock Grid.Row="0" Text="{Binding Name}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5 1 5 1" FontSize="16" />
                                                            <TextBlock Grid.Row="1" Text="{Binding Path=Path, Mode=OneWay}" Style="{StaticResource FieldDescriptionTextBlock}" Margin="5 2 5 4" TextWrapping="Wrap" FontSize="10" />
                                                        </Grid>
                                                        <ui:StatusLabel x:Name="ExecutableStatusLabel" Grid.Column="3" Margin="10 0" VerticalAlignment="Center" LabelState="Idle" Height="36">
                                                            <ui:StatusLabel.Label>
                                                                <Grid Margin="2" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                                    <TextBlock Text="{helpers:Localization NotRunning}" FontSize="14" FontWeight="Regular" Visibility="{Binding Path=IsRunning, Converter={StaticResource InvertBoolToVisibility}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                                    <TextBlock FontSize="18" Margin="0 2 0 0" FontWeight="Regular" FontFamily="{DynamicResource TimecodeFont}" Visibility="{Binding Path=IsRunning, Converter={StaticResource BoolToVisibility}}" VerticalAlignment="Center" TextAlignment="Center">
                                                                        <TextBlock.Text>
                                                                            <MultiBinding Converter="{StaticResource UptimeConverter}">
                                                                                <Binding Path="Uptime"/>
                                                                                <Binding Source="{x:Static l:Resources.UptimeDaysFormat}"/>
                                                                                <Binding Source="{x:Static l:Resources.UptimeTimeFormat}"/>
                                                                            </MultiBinding>
                                                                        </TextBlock.Text>
                                                                    </TextBlock>
                                                                </Grid>
                                                            </ui:StatusLabel.Label>
                                                        </ui:StatusLabel>
                                                    </Grid>
                                                    <Grid Grid.Column="2">
                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                                            <Border Width="10" Background="Transparent" />
                                                            <ui:IconButton x:Name="ExecutableDiag" Click="OpenDiag_Click" Icon="{DynamicResource DiagIcon}" ToolTip="{helpers:Localization ContextMenuExecDiagItemHeader}" Visibility="{Binding Path=IsServer, Converter={StaticResource BoolToVisibility}}" IsEnabled="{Binding Path=IsRunning}" />
                                                            <ui:IconButton x:Name="ExecutableGrid" Click="OpenGrid_Click" Icon="{DynamicResource GridIcon}" ToolTip="{helpers:Localization ContextMenuExecGridItemHeader}" Visibility="{Binding Path=IsServer, Converter={StaticResource BoolToVisibility}}" IsEnabled="{Binding Path=IsRunning}" />
                                                            <ui:IconButton x:Name="ExecutableRebuild" Click="RebuildMedia_Click" Icon="{DynamicResource RefreshIcon}" ToolTip="{helpers:Localization ContextMenuRebuildMediaDbItemHeader}" Visibility="{Binding Path=IsScanner, Converter={StaticResource BoolToVisibility}}" />
                                                            <ui:IconButton x:Name="ExecutableStart" Click="StartButton_Click" Icon="{DynamicResource PlayIcon}" ToolTip="{helpers:Localization ContextMenuExecStartItemHeader}" IsEnabled="{Binding Path=IsRunning, Converter={StaticResource InvertBool}}" />
                                                            <ui:IconButton x:Name="ExecutableStop" Click="StopButton_Click" Icon="{DynamicResource StopIcon}" ToolTip="{helpers:Localization ContextMenuExecStopItemHeader}" IsEnabled="{Binding Path=IsRunning}" />
                                                            <ui:IconButton x:Name="ExecutableRestart" Click="RestartButton_Click" Icon="{DynamicResource RestartIcon}" ToolTip="{helpers:Localization ContextMenuExecRestartItemHeader}" IsEnabled="{Binding Path=IsRunning}" />
                                                            <Border Width="10" Background="Transparent" />
                                                            <ui:IconButton x:Name="ExecutableConfig" Icon="{DynamicResource ConfigIcon}" ToolTip="{helpers:Localization ContextMenuExecConfigItemHeader}" Click="ExecutableConfig_Click" />
                                                            <Border Width="10" Background="Transparent" />
                                                        </StackPanel>
                                                    </Grid>
                                                </Grid>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding IsRunning}" Value="False">
                                                        <Setter TargetName="StatusButton" Property="Background" Value="{DynamicResource BaseBgRed}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                                        <Setter TargetName="StatusButton" Property="Background" Value="{DynamicResource BaseBgGreen}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Exists}" Value="False">
                                                        <Setter TargetName="StatusButton" Property="Background" Value="Transparent"/>
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Border>
                            </Grid>
                        </ScrollViewer>
                    </ui:TabbedPanelItem>
                    <CollectionContainer Collection="{Binding Source={x:Static local:App.Launchpad}, Path=Executables}"/>
                </CompositeCollection>
            </ui:TabbedPanel.ItemsSource>
        </ui:TabbedPanel>
    </Grid>
</ui:AppWindow>
